<?xml version="1.0" encoding="utf-8"?>
<templates>
  <!-- PLUGIN TEMPLATES -->
  <!-- Placeholders 
    @{TPL_PLUG_NAME}  Plugin name
    @{TPL_MODU_NAME}  Module name
    @{TPL_FILE_NAME}  Module source (.h, .cpp) file name 
  -->
  <template context="plugins" name="tpl_plugin_blank" ue="4,5" path="UE5/Plugins/Blank">
    <meta has_module="true"/>
    <ui label="Blank" desc="Create a blank plugin with a minimal amount of code."/>
  </template>
  <template context="plugins" name="tpl_plugin_contentonly" ue="4,5" path="UE5/Plugins/ContentOnly">
    <meta has_module="false"/>
    <ui label="Content Only" desc="Create a blank plugin that can only contain content."/>
  </template>

  <!-- PLUGIN MODULE TEMPLATES -->
  <!-- Placeholders 
    @{TPL_MODU_NAME}  Module name
    @{TPL_FILE_NAME}  Module source (.h, .cpp) file name 
  -->
  <template context="modules" name="tpl_module_blank" ue="4,5" path="UE5/Plugins/Blank/@{TPL_PLUG_NAME}/Source">
    <ui label="Blank" desc="Create a blank module with a minimal amount of code."/>
    <meta type="Runtime" phase="Default"/>
  </template>

  <!-- GAME MODULE TEMPLATES -->
  <!-- Placeholders 
    @{TPL_MODU_NAME}  Module name
    @{TPL_FILE_NAME}  Module source (.h, .cpp) file name 
  -->
  <template context="game_modules" name="tpl_module_blank" ue="4,5" path="UE5/Plugins/Blank/@{TPL_PLUG_NAME}/Source">
    <ui label="Blank" desc="Create a blank module with a minimal amount of code."/>
    <meta type="Runtime" phase="Default" target="Game"/>
  </template>

  <!-- SOURCE TEMPLATES -->
  <!-- Placeholders 
    @{TPL_MODU_API}    Module api macro
    @{TPL_SOUR_CLASS}  Source class name (.h, .cpp) and  file name 
    @{TPL_SOUR_INCL}   Source include path
  -->
  <template context="sources" name="tpl_class_empty" ue="4,5" path="UE5/Sources/Classes">
    <meta header="Empty.h" source="Empty.cpp"/>
    <ui label="Empty" desc="An empty C++ class with a default contructor and destructor."/>
  </template>
  <template context="sources" name="tpl_class_character" ue="4,5" path="UE5/Sources/Classes">
    <meta header="Character.h" source="Character.cpp"/>
    <ui label="Character" desc="A Character is a type of Pawn that includes the ability to walk around."/>
  </template>
  <template context="sources" name="tpl_class_pawn" ue="4,5" path="UE5/Sources/Classes">
    <meta header="Pawn.h" source="Pawn.cpp"/>
    <ui label="Pawn" desc="A Pawn is an actor than can be 'possessed' and receive input from a controller."/>
  </template>
  <template context="sources" name="tpl_class_actor" ue="4,5" path="UE5/Sources/Classes">
    <ui label="Actor" desc="An Actor is an object that can be placed or spawned in the world."/>
    <meta header="Actor.h" source="Actor.cpp"/>
  </template>
  <template context="sources" name="tpl_class_actorcomponent" ue="4,5" path="UE5/Sources/Classes">
    <meta header="ActorComponent.h" source="ActorComponent.cpp"/>
    <ui label="Actor Component" desc="An ActorComponent is a reusable component that can be added to any actor."/>
  </template>
  <template context="sources" name="tpl_class_scenecomponent" ue="4,5" path="UE5/Sources/Classes">
    <meta header="SceneComponent.h" source="SceneComponent.cpp"/>
    <ui label="Scene Component" desc="A SceneComponent is a component that has a scene transform and can be attached to other scene components."/>
  </template>
  <template context="sources" name="tpl_class_playercameramanager" ue="4,5" path="UE5/Sources/Classes">
    <meta header="PlayerCameraManager.h" source="PlayerCameraManager.cpp"/>
    <ui label="Player Camera Manager" desc="A PlayerCameraManager is responsible for managing the camera for a particular player."/>
  </template>
  <template context="sources" name="tpl_class_playercontroller" ue="4,5" path="UE5/Sources/Classes">
    <meta header="PlayerController.h" source="PlayerController.cpp"/>
    <ui label="Player Controller" desc="A PlayerController is an actor responsible for controlling a Pawn used by the player."/>
  </template>
  <template context="sources" name="tpl_class_gamemodebase" ue="4,5" path="UE5/Sources/Classes">
    <meta header="GameModeBase.h" source="GameModeBase.cpp"/>
    <ui label="Game Mode Base" desc="A GameModeBase defines the game being played, its rules, scoring and other facets of the game type."/>
  </template>
  <template context="sources" name="tpl_class_worldsettings" ue="4,5" path="UE5/Sources/Classes">
    <meta header="WorldSettings.h" source="WorldSettings.cpp"/>
    <ui label="World Settings" desc="A WorldSettings is an Actor containing all script accessible world properties."/>
  </template>
  <template context="sources" name="tpl_class_hud" ue="4,5" path="UE5/Sources/Classes">
    <meta header="HUD.h" source="HUD.cpp"/>
    <ui label="HUD" desc="Base class of the heads-up display."/>
  </template>
  <template context="sources" name="tpl_class_playerstate" ue="4,5" path="UE5/Sources/Classes">
    <meta header="PlayerState.h" source="PlayerState.cpp"/>
    <ui label="Player State" desc="A PlayerState is created for every player on a server (or in a standalone game)."/>
  </template>  
  <template context="sources" name="tpl_class_gamestatebase" ue="4,5" path="UE5/Sources/Classes">
    <meta header="GameStateBase.h" source="GameStateBase.cpp"/>
    <ui label="Game State Base" desc="A GameStateBase is a class that manages the game's global state and is spawned by GameModeBase."/>
  </template>
  <template context="sources" name="tpl_class_blueprintfunctionlibrary" ue="4,5" path="UE5/Sources/Classes">
    <meta header="BlueprintFunctionLibrary.h" source="BlueprintFunctionLibrary.cpp"/>
    <ui label="Blueprint Function Library" desc="This class is a base class for any function libraries exposed to blueprints."/>
  </template>
  <template context="sources" name="tpl_class_slatewidget" ue="4,5" path="UE5/Sources/Classes">
    <meta header="SlateWidget.h" source="SlateWidget.cpp"/>
    <ui label="Slate Widget" desc="A custom Slate widget, deriving from SCompoundWidget."/>
  </template>
  <template context="sources" name="tpl_class_slatewidgetstyle" ue="4,5" path="UE5/Sources/Classes">
    <meta header="SlateWidgetStyle.h" source="SlateWidgetStyle.cpp"/>
    <ui label="Slate Widget Style" desc="A custom Slate widget style, deriving from FSlateWidgetStyle, along with its associated UObject wrapper class."/>
  </template>
  <template context="sources" name="tpl_class_unrealinterface" ue="4,5" path="UE5/Sources/Classes">
    <meta header="UnrealInterface.h" source="UnrealInterface.cpp"/>
    <ui label="Unreal Interface" desc="A UObject Interface class, to be implemented by other UObject-based classes."/>
  </template>
</templates>